#EXPLANATION#
TIME COMPLEXITY:O(N)
SPACE  COMPLEXITY:O(1)---> Because we are using constant space
To check all elements are unique or not ,we will declare boolean array (bool a[]) with size 256 with initial values false
Then we will check for each charcater of string, if the value at that index of boolean array is already true it means character is already present in the array and hence we will return false.

CODE:
import java.util.Scanner;
public class unique
{
   boolean uni(String str)
   {
      if(str.length()>256)
         return false;
      boolean [] bool=new boolean[256];
      for(int i=0;i<str.length();i++)
      {
         char c=str.charAt(i);
         if(bool[c])
            return false;
         bool[c]=true;
      }
      return true;
   }
   public static void main(String args[])
   {
      unique ob=new unique();
      Scanner sc=new Scanner(System.in);
      System.out.print("enter string");
      String str=sc.nextLine();
      boolean ans=ob.uni(str);
      System.out.print(ans);
   }
}
